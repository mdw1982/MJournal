CHANGE LOG
10.21.22 - logging disabled for the near term... everything being sent to standard out while further development moves forward for better debugging.

10.24.22 - moved away from using a plain text file for dblist and chose to use a .json file for this using the same file name. this was brought about by a process change involving how the databases are handled by the program. Before, active database were written to the text file dblist in a comma delimited format. this was sloppy at best. using json to write the file is much cleaner and easier to manage. however, now all database files are read from disk using os.listdir and placed into the new dblist.json file. when databases are removed from the active list or detached they're actually moved to a sub-folder of the program root: olddb. Attach Database now looks in that folder for the database file to bring back out, add to active databases (dblist.json). Over all, a much cleaner process and far easier to code for.

10.25.22 - accidentally detaching the active database from the program is prevented. I was reminded of the need for checks in that part of the program so I addressed it. It is now impossible to remove (detach) the active database from within the program.

10.29.22 - bound Enter key to OK/Submit buttons on sub-screens: program settings, login window, and change password window. Also set auto-close parameter on confirmation popups for these windows.

10.30.22 - created two small classes, DBConn and Entry, but the only one in real use right now is DBConn. it's handling the connection to the database, inserts, gets, updates, etc... quite handy and has allowed me to clean up quite a bit of code in the main program. The Entry class was created because I'm looking for a way to prevent entry updates being made from getting lost when the user accidently triggers another event before the update is submitted.

Also performed some more code cleanup this evening condensing things a bit by using less code to get a job done. Every little bit helps.

10.30.22 - Version: 0.7.7.5 reached.
Plans for compiling for windows have been put on hold for now. At least until version 0.8.0.0. More time is required to get the code to a point of being more pythonic in nature to avoid needing to alter a lot of things to make it work as well as avoiding a fork in the project. shrank the main window height to better fit a laptop screen. the main window is find on a desktop monitor, but trying to use the program on a laptop was a real challenge. it fits nicely on the laptop screen now.

10.31.22 - DBConn class created. Just a small class with a few methods to create an instance of an object that makes the connection to the active database, handles the gets, inserts, updates and closes the cursor.

11.1.22 - first stable version of the program compiled in windows today. There are some bugs to work out but nothing major.

11.2.22 - started converting the program over to use the DBConn class. makes things a bit faster but mostly cleans up the code and takes a lot less code to get the job done of data in and data out.
current version: 0.7.7.8 modified database maintenance screen. because windows has a real problem with the functions for creating crontab entries and the crontab module import, those functions and the import are wrapped in if statements detecting the OS where it's running. increased the height of the new entry window just a smidge so it would appear correctly in windows. the subit and cancel buttons at the bottom of the screen were getting cut off.

11.3.22 current version 0.7.8.1 - added error checking for new entry windows in case the title field is left blank. user is warned of the issue and allowed to correct it before submitting the entry.
also added a packaging script to handle gathering together all the necessary support files and src files into the dist folder after the program is compile. this script takes one of two arguments: (1) newlist: it will create a new filelist.json file. there is a denylist[] object that can have items added to it so that they're not part of the gathering of file. (2) run: this runs the main part of the script that copies all the support and src files to the distribution folder, then renames the folder and appends the current version to the folder name.

11.3.22 first release posted on GitHub... version: 0.7.8.1. For a Beta release it's quite stable. There's still a lot to do, but the program has a solid foundation. I started this project the last week of Sept. 22 and it's progressed rapidly.

11.4.22 second release posted: version 0.7.8.8..
Change Entry Update method such that when an entry is selected and update entry is then selected the entry opens in a new window. The primary reason for this was to prevent an entry update from being lost by another event being triggered.
more code cleanup performed in an ongoing effort to make the program more pythonic in nature and operation. Better for cross-platorm applications.
Still on track for the version 0.8.8.0 windows release. Should only be a few more days provided I have enough time to get it thoroughly tested.
Added Bread Crumbs on a few of the function buttons labeled with the corresponding F-key that triggers the event.

11.9.22 current version: 0.7.9.5:
cleaned up the search results algo that builds the search results tree menu. It now displays correct by Year, Month descending.
Added Restore from Backup functionality to the program so that a database previously backed up can be easily restored without needing to do it from the command line.
cleanup needed on the updates sent back to the main screen after an entry is updated. filtering seems to be lacking there. When an update is processed from the update screen it reappears in the VIEW on the main window. As it appears single and double-quotes aren't getting properly converted to human readable. if you click on the entry from the tree menu it displays correctly.

11.12.22 current version: 0.7.9.7
Entry Search Function is finally operating correctly. It was a logic issue and I just had to find the right logic to get things sorted out. Search results are displayed in ascending order.
More Code Clean performed making the program more pythonic. Approaching the point where I'm more confident about the code compiling on Windows without massaging the code.
Cleanup performed on updates windows such that all text is displayed human-readable in both the update entry window and the main screen when displaying a journal entry.

11.16.22 current version: 0.7.9.9
converted program event loop from strung out if/elif/else statements to using structured pattern matching (match/case) statements. required full upgrade of Python from 3.9 to 3.10 and then 3.11. Currently the program is compiled using Python 3.11. Compiled the program is noticeably faster.

found and fixed one more bug in the entry search function that involved the program not returning correct results from the search to the screen. Functions responsible for building the record list weren't differentiating between visible and not-visible records. this has been corrected.

11.23.22 current version 0.7.9.9
found one event that wasn't being handled correctly. this event is triggered from the menu bar and was added in the correct place in the corresponding case statement.
program recompiled and posted...

11.27.22 crontab module error causing program crash. after some research into the error it was discovered that what once worked no longer worked. I suspect this is a result of the change in Python versions. removed generic crontab module usage to python-crontab module which resolved the crash and the error.

12.3.22 current version 0.8.0.0
moved first run setup to setup module where it was intended to be to ensure that things get setup correctly for first time use.
Windows version released!

1.22.23 current version 0.8.0.4
adjustments to the main program window making the title and entry areas read only to prevent confusion about making updates to existing entries or creating new entries in this part of the program impossible. Entry updates and new entries need to be made in their child windows.

added button on the entry update window to insert date/time when making an entry update. it was brought to my attention that if one didn't remember the bound function key for this there was no way to make it happen. Rather than add a menu bar to the child windows this was a better fit since New Entry and Update Entry windows are purpose built for one thing this seemed to be the best solution.

fixed the program crashed caused when the X on the Database Maintenance window was clicked.
uploaded the package containing the latest changes.

